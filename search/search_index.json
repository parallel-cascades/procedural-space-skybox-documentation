{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Procedural Space Skybox","text":"<p>This asset includes tools and effects for creating procedural space skyboxes for your Unity games. Included are shader effects and materials, editor tools and VFX Graph systems and particles for creating different styles of space skyboxes.</p> <p>As of v3.1.0, the Procedural Celestial Body Materials Asset is included in this </p>"},{"location":"#why-use-a-procedural-skybox","title":"Why use a procedural skybox?","text":"<ul> <li>Procedural skyboxes offer extensive customization options, letting you generate unique looking levels for your games and prototypes in seconds.</li> <li>Using a dynamic skybox reduces game size on the disk, since you're not using any disk space for large pre-rendered skybox textures.</li> <li>Or, if performance is a larger priority than file size, editor tools are included to render dynamic skyboxes to cubemap textures, to boost GPU performance at the cost of storage space.</li> <li>Integration with random-level generation systems (coming soon).</li> </ul>"},{"location":"#get-started","title":"Get Started","text":"<p>Get started by Installing the package and looking at the sample scenes in your project, or try out the Windows Demo.</p>"},{"location":"3d-skybox-background/","title":"3D Skybox Background","text":""},{"location":"3d-skybox-background/#introduction","title":"Introduction","text":"<p>A 3D Skybox allows you to have giant stellar bodies in the background of your scene, that get rendered behind everything and do not affect the gameplay or physics of the world, but provide a cosmic sense of scale.</p> <p>There are different ways to implement this, but the approach chosen for this asset uses custom passes and stencil overrides, instead of multiple cameras. This approach is more performant and less bug prone.</p> <p>Here's how the effect looks with opaque celestial bodies with transparent elements in the background: </p> <p>And here's a guide to how the objects are actually set-up: </p>"},{"location":"3d-skybox-background/#setup","title":"Setup","text":"<p>To have your objects become part of the 3D Skybox in a scene, they need to be part of the 3D Skybox layer: </p> <p>The actual overriding of render order and stenciling is set up in a sample URP Renderer asset located in the <code>Samples</code> folder: </p> <p>The settings of the skybox renderer should look like this: </p> <p>This renderer is automatically loaded when you open the 3D Skybox Sample Scene.</p>"},{"location":"changelog/","title":"Changelog","text":"<p>All notable changes to this project will be documented in this file.</p> <p>The format is based on Keep a Changelog, and this project adheres to Semantic Versioning.</p>"},{"location":"changelog/#301-2025-06-27","title":"[3.0.1] - 2025-06-27","text":"<ul> <li> <p>Added</p> <ul> <li>Links to new online documentation.</li> <li>New sample scene showcasing how to combine both skybox effects.</li> </ul> </li> <li> <p>Changed</p> <ul> <li>Disabled depth write on both procedural skybox shaders, to prevent depth conflicts with the VFX Graph skybox effect.</li> </ul> </li> <li> <p>Fixed</p> <ul> <li>Reconnected disconnected nodes in the VFX Graph skybox effect for nebula rendering.</li> <li>The Procedural Sun module in Procedural Space Skybox and Cubemap Skybox with Procedural Sun would get misaligned when moving the camera. </li> <li>Sun Distance (internal property) value was set too low, causing the shimmer effect to become misaligned with the sun core in the skybox when moving the camera. A larger default value has been set to prevent this issue.</li> </ul> </li> </ul>"},{"location":"changelog/#300-2025-06-23","title":"[3.0.0] - 2025-06-23","text":"<ul> <li> <p>Added</p> <ul> <li>New, more performant procedural skybox technique using VFX Graph.</li> <li>Editor tools for creating star and nebula textures, and baking them into texture arrays.</li> <li>New welcome window with links to sample scenes and documentation.</li> </ul> </li> <li> <p>Changed</p> <ul> <li>Asset format reverted to Assets folder package. This will require uninstalling any previous versions of the package.</li> </ul> </li> </ul>"},{"location":"changelog/#200-2024-10-21","title":"[2.0.0] - 2024-10-21","text":"<ul> <li> <p>Changed</p> <ul> <li>Updated to work with Unity 6000.0</li> <li>Asset format updated to Unity Package Manager (UPM) format. This will require uninstalling any previous versions of the package.</li> <li>Inspector shader group name changed from \"Shader Graphs/\" to \"Parallel Cascades/\"</li> <li>Cubemap Rendering automatically applies import settings to generated cubemap assets.</li> </ul> </li> <li> <p>Removed</p> <ul> <li>Legacy cubemap rendering - individual textures for 6-sided cubemap shader and legacy cubemap asset.</li> </ul> </li> </ul>"},{"location":"changelog/#110-2024-10-12","title":"[1.1.0] - 2024-10-12","text":"<ul> <li> <p>Added</p> <ul> <li>Added Procedural Sun effect to Procedural Space Skybox shader.</li> <li>Added Cubemap Skybox with Procedural Sun shader.</li> <li>Added boolean keywords for each effect - nebula, sun, stars, galaxy.</li> <li>Added dropdown to select whether to save skybox as a cubemap asset or as a 6 individual textures.</li> <li>Assembly definitions for common runtime and editor code.</li> </ul> </li> <li> <p>Changed</p> <ul> <li>Updated documentation to include new features.</li> <li>'Render Cubemap to Skybox' menu has been moved from 'Component/' to 'Tools/' toolbar menu.</li> <li>Cleaned up some code comments.</li> <li>Editor focuses on saved asset after rendering skybox.</li> </ul> </li> <li> <p>Removed</p> <ul> <li>Removed 'package.json' file from asset root.</li> </ul> </li> </ul>"},{"location":"changelog/#100-2024-09-09","title":"[1.0.0] - 2024-09-09","text":"<ul> <li>Initial release</li> </ul>"},{"location":"getting-started/installation/","title":"Installation","text":""},{"location":"getting-started/installation/#importing-the-asset","title":"Importing the Asset","text":"<p>To install this asset, import it in your project using the Package Manager:</p> This window is found under <code>Window/Package Manager</code>"},{"location":"getting-started/installation/#removing-previous-versions","title":"Removing previous versions","text":"<p>If you have a version of this asset prior to 3.0.0 installed, you will need to completely remove it from your project before importing 3.0.0, to avoid conflicts.</p>"},{"location":"getting-started/installation/#requirements","title":"Requirements","text":"<p>Both skybox techniques used in this asset require Unity's Shader Graph package. It comes pre-installed in projects using the Universal Render Pipeline (URP).</p> <p>The VFX Graph Skybox technique is built with Unity's Visual Effect Graph package. </p> <p>When importing the asset from the Package Manager, you will get a pop-up window asking you to install both:</p> <p></p>"},{"location":"getting-started/welcome-window/","title":"Welcome Window","text":"<p>When you import the asset for the first time, you will be greeted by the Welcome Window:</p> If you want to open this window again, you can find it under <code>Window/Parallel Cascades/Welcome Window</code> <p>Open the linked sample scenes to explore how the effects look and are setup in scenes.</p>"},{"location":"procedural-celestial-bodies/custom-menu-commands/","title":"Custom Menu Commands","text":"<p>Each procedural celestial body in your scene requires its own material and gradient texture. If you use the post-fx glow effect, that too requires its own material.</p> <p>You should use the custom menu commands added to Unity\u2019s context menu to automatically have all the texture and material generation and adding of components, assigning of references, handled automatically.</p>          To find the commands, right-click in your hierarchy view, or use the <code>GameObject &gt; Parallel Cascades &gt; *</code> menu.      <p>Once you click on an option, a save folder window will open:</p> <p></p> <p>This is the folder where your body\u2019s material and textures will be saved. It is recommended to create a new one for each new celestial body, to keep your project tidy.</p>"},{"location":"procedural-celestial-bodies/filtering/","title":"Filtering Detail Levels (Advanced Option)","text":"<p>Viewing stars and gas giants from a distance can cause aliasing, where high-detail (large-scale) patterns appear as flickering dots on the surface. This will be most visible when moving the camera in relation to the planets.</p> <p>To avoid this problem, a supersampling algorithm is integrated into the shader, based on a filtering technique proposed by Inigo Quilez.</p> <p>You don\u2019t need to understand this technique to use the filtering, you simply need to increase the value of the Filtering Detail property in the material. The higher the value, the more smoothed the material will be when viewed at a distance, but this comes with a performance cost, so it should not be overused, nor used when the material takes up a large portion of the screen.</p> <p></p>"},{"location":"procedural-celestial-bodies/introduction/","title":"Procedural Celestial Body Materials Introduction","text":"<p>This asset contains a set of procedural materials and scripts you can use to generate gas giants, asteroid rings and stars, and stylize them with post-processing glow effects.</p> <p></p>"},{"location":"procedural-celestial-bodies/introduction/#asset-contents","title":"Asset Contents","text":"<ol> <li> <p>Shader Graph Procedural Shaders and Materials, MonoBehaviour scripts for quick setup of:</p> <ul> <li>Procedural Asteroid Ring</li> <li>Procedural Gas Giant + Lit Atmospheric Glow Effect</li> <li>Procedural Star + Star Corona Glow</li> </ul> </li> <li> <p>Premade Celestial Body Prefabs - 3 Stars and 6 Gas Giants</p> <ul> <li>Seen in the example image above, these are ready to drop into your scenes.</li> </ul> </li> <li> <p>Utility Editor Scripts</p> <ul> <li>Editor Menu Items to create procedural celestial bodies with all materials, textures, and components assigned and ready to edit.</li> </ul> </li> <li> <p>Custom 3D Meshes for celestial bodies</p> <ul> <li>icosphere_high - high-poly sphere for rendering smooth stars and gas giants. High triangle and vertex count allow for smoother looking dynamic procedural visuals.</li> <li>double_sided_plane - double-sided plane mesh allow for Asteroid Rings to be viewed from both sides.</li> </ul> </li> </ol>"},{"location":"procedural-celestial-bodies/introduction/#installation","title":"Installation","text":"<p>The assets for the 3D gas giants and stars are stored in a separate folder, as they are currently being distributed as a free asset on the asset store. They are included in the paid Procedural Space Skybox Asset, and do not require a separate download.</p>"},{"location":"procedural-celestial-bodies/introduction/#samples","title":"Samples","text":"<p>There are two sample scenes in this asset:</p> <ul> <li>Space Objects Sample Scene - shows the 9 sample celestial bodies, with glow effects and URP settings.</li> <li>3D Skybox Sample Scene - shows a more complex 3D Skybox set up using some of the celestial body prefabs.</li> </ul>"},{"location":"procedural-celestial-bodies/introduction/#urp-settings","title":"URP Settings","text":"<p>The Sample URP Asset and Renderer have the shadows and anti-aliasing settings used to get the look of the asset presented in the store page.</p> <p>The 3D Skybox Renderer is needed for 3D Skybox setup.</p>"},{"location":"procedural-celestial-bodies/introduction/#vsync","title":"VSync","text":"<p>To avoid screen tearing with the glowing corona post-processing effect, make sure to enable VSync in the Scene View:</p> <p></p> <p>And in Builds, from the Project Settings: </p>"},{"location":"procedural-celestial-bodies/procedural-gas-giants/","title":"Procedural Gas Giants","text":"<p>Similar to Procedural Stars, Gas Giants are built with domain warped FBM noise, but the pattern is kept constant around the Y axis, to produce distinct vertical layers.</p>      Your browser does not support the video tag."},{"location":"procedural-celestial-bodies/procedural-gas-giants/#setup","title":"Setup","text":"<p>As with procedural stars, the quickest way to add a new gas giant to your scene is by using the custom menu commands added to Unity\u2019s context menu. There's options for gas giants with and without asteroid rings.</p>"},{"location":"procedural-celestial-bodies/procedural-gas-giants/#monobehaviour-component-reference","title":"MonoBehaviour Component Reference","text":"<p>Similar to the Stars, Gas Giants are built with domain warped FBM noise, but the pattern is kept constant around the Y axis, to produce distinct vertical layers.</p> <p>You can control the variation along each axis using the X and Z Scaling and Y Gradient Scale and Strength Properties. Observe the difference between the Saturn and Jupiter samples in the Sample Scene.</p>"},{"location":"procedural-celestial-bodies/procedural-gas-giants/#asteroid-rings","title":"Asteroid Rings","text":"<p>Inner and Outer Radius control the shape of the asteroid ring.</p> <p>The patterns in asteroid rings are built by sampling a detailNoise texture assigned by default to each Procedural Asteroid Shader. As an advanced user, you can plug your own textures here to get different patterns.</p>"},{"location":"procedural-celestial-bodies/procedural-gas-giants/#gas-giant-glow","title":"Gas Giant Glow","text":"<p>The glow effect is a full-screen 3D post-processing effect, same as the Star Corona Glow. In addition, it uses the main light direction to darken parts of the effect.</p>"},{"location":"procedural-celestial-bodies/procedural-gas-giants/#advanced-effects","title":"Advanced Effects","text":"<p>You can use two asteroid rings on the same parent gas giant to get a more varied effect:</p> <p></p> <p>The ring is composed of two overlapping asteroid ring meshes, with the inner ring's outer radius slightly smaller than the outer ring's inner radius (repeat that 5 times, ha!).</p>"},{"location":"procedural-celestial-bodies/procedural-stars/","title":"Procedural Stars","text":"<p>Not to be confused with the procedural Sun effect in the procedural skybox shader, procedural stars are 3D objects with materials using domain-warped fractal brownian motion noise patterns<sup>1</sup>.</p>      Your browser does not support the video tag."},{"location":"procedural-celestial-bodies/procedural-stars/#setup","title":"Setup","text":"<p>The quickest way to add a new procedural star object to your scene is by using the custom menu commands added to Unity\u2019s context menu. This will create a body with a mesh and renderer in your scene, coupled with the relevant procedural MonoBehaviours, and create and bind the necessary textures and materials for the procedural shader.</p>"},{"location":"procedural-celestial-bodies/procedural-stars/#monobehaviour-component-reference","title":"MonoBehaviour Component Reference","text":"<p>Instead of directly modifying the shader/material properties, it's recommended for you to use a MonoBehaviour Procedural Star component. These update the shader properties, bind the gradient texture sampled in the shader to a user-friendly inspector gradient editor, make sure the effects remain consistent if the object's scale changes. </p>"},{"location":"procedural-celestial-bodies/procedural-stars/#colors-domain-warp-sampling","title":"Colors - Domain Warp Sampling","text":"<p>The domain warped noise that forms the basis for the dynamic pattern produces a main noise value that samples the Color Gradient, and two values R and Q, which are used to blend that color with tints. Myriad effects and patterns  can be achieved by adjusting the Color Gradient, R and Q colors. </p> <p>The Fresnel Color is an additional emissive effect added at the edges of star spheres. </p>"},{"location":"procedural-celestial-bodies/procedural-stars/#warping-and-scaling","title":"Warping and Scaling","text":"<p>The Warp Amount and Scale properties produce the roiling, twisting pattern of the star's liquid surface.</p> Warp Amount=4 and Scale=4 make for a very high-detail, swirling, liquid blue giant. The red dwarf with Scale=5 but Warp Amount = 0.4 has much lower frequency detail."},{"location":"procedural-celestial-bodies/procedural-stars/#star-corona-glow-techniques","title":"Star Corona Glow Techniques","text":"<p>The glow effect around the star spheres can be achieved in two ways:</p> <ul> <li>Custom Render Pass Post-Processing Effect</li> <li>URP Bloom</li> </ul> <p></p> <p>Glow Comparisons: 1. Glow disabled  2. Bloom Glow  3. PostFX Glow  4. PostFX Glow</p>"},{"location":"procedural-celestial-bodies/procedural-stars/#postfx-glow","title":"PostFX Glow","text":"<p>If you want your star glow effect to be fully independent of volumes and lighting, you can implement it through the Star Corona Glow component:</p> <p></p> <p>Each star corona is a full-screen 3D post-processing effect applied through a custom ScriptableRenderPass using Unity\u2019s RenderGraph API. You should not have to adjust the Render Pass Event from the default \u2018Before Rendering Transparents\u2019 unless you\u2019re running other effects that might interfere with these, like stacking cameras or screen overlays. The default event also supports the sample 3D Skybox implementation with custom render passes.</p> <p>The Star Object Radius property relates to the radius of the mesh used for the star object. The default value of 0.5 applies to Unity\u2019s Sphere mesh and the custom high-resolution ico-sphere mesh provided with this asset. You do not have to modify this property if you\u2019re changing the star GameObject\u2019s transform scale, the scale is calculated automatically and passed to the shader through the Star Corona MonoBehaviour.</p> <p>Each object in the scene with this glow component adds an additional render pass to apply the effect.</p> <ol> <li> <p>For more information on these techniques, check out Inigo Quilez's article.\u00a0\u21a9</p> </li> </ol>"},{"location":"shader-skybox/customization/","title":"Customizing the Skybox Shader","text":""},{"location":"shader-skybox/customization/#material-inspector","title":"Material Inspector","text":"<p>To customize the skybox, select the material in your project view to open the shader editor window in the inspector.</p> <p></p> <p>The shadergraph is modular, with each module contained in a subgraph, and its properties exposed in a separate category in the editor. You can toggle modules on or off and tweak their parameters to create unique skyboxes. For a detailed breakdown of all the shader properties, see the Shader Properties Reference.</p>"},{"location":"shader-skybox/customization/#hiding-nebulas","title":"Hiding nebulas","text":"<p>If the nebulas on a certain side of the skybox are overlapping the galactic disk, or you simply want to hide them, you can increase their Falloff property until they disappear.</p> <p></p>"},{"location":"shader-skybox/customization/#color-palettes","title":"Color Palettes","text":"<p>To create more interesting color transitions for the skyboxes, all nebulas and galaxy effects sample their colors from a palette in the way described in Inigo Quilez\u2019s Article: Color Palettes. This means that the selected color in the inspector might not always correspond to the final color of the skybox - the color is just the offset D applied to the base colors A, B and C which are hidden away inside the shadergraph, and can be edited manually if more control over the palettes is desired. Furthermore, the range of sampled values can be controlled as explained in the Shader Properties Reference. </p> <p>See how adjusting this palette color affects the galaxy glow:</p> <p></p>"},{"location":"shader-skybox/introduction/","title":"Shader Skybox Introduction","text":"<p>The procedural skybox shader is versatile but performance heavy skybox solution. It uses various procedural noise techniques to generate natural looking space components - fields of stars, nebula clouds, suns and a galactic band.</p> <p>Its main benefit is its customisability - all of the skybox components are modular and adjustible, allowing infinite skybox variants. Have a look at some of the sample images below:</p> Example 1: A starfield with small star dots with varied colors and sizes. Fewer, larger, glowing stars can be seen. Dominating the view is a large luminous galactic band, with a far denser star field, and a soft blue glow spreading from its edges. Example 2: The colors of the galactic band are altered, the starfield now has a faded, red glow, and the blue glow is transformed into a sickly green cloud. Example 3: Back to the original blue galaxy, it can be rotated to lie on a 'horizontal' plane (of course, there is no horizon in space). Example 4: The galaxy effect size can be reduced, creating a smaller galactic disk, or one that is further away from the observer. Example 5: The galactic band effect can be completely disabled, revealing some faint reddish nebulas that were previously obscured. Example 8: Increasing the glow of the nebulas shows their natural patterns much more clearly. Example 9: Individual control of the random seed used for the nebula shape noise algorithm allows us to create new nebula shapes."},{"location":"shader-skybox/setup/","title":"Shader Skybox Setup","text":""},{"location":"shader-skybox/setup/#sample-skybox-materials","title":"Sample Skybox Materials","text":"<p>First, you need to have a material using the procedural skybox shader in your project. You can find some preset materials included with this asset in the Samples foler:</p> <p></p>"},{"location":"shader-skybox/setup/#create-your-own-materials","title":"Create your own materials","text":"<p>If you want to create your own materials using the procedural skybox shader, you need to create a new material and assign it the Proecdural Space Skybox shader:</p> <ol> <li> <p>In the Inspector, click the Shader dropdown on your new material.</p> <p></p> </li> <li> <p>Select Procedural Space Skybox from the list.</p> <p></p> </li> </ol>"},{"location":"shader-skybox/setup/#applying-the-skybox-material-in-a-scene","title":"Applying the skybox material in a scene","text":"<p>To apply a skybox in a scene you can either:</p> <ol> <li> <p>Drag and drop the desired skybox material onto the background of the scene view and the skybox should update automatically.</p> </li> <li> <p>Place the material in the scene Skybox Material slot found in the menu <code>Window&gt;Rendering&gt;Lighting&gt;Environment</code></p> </li> </ol> <p></p>"},{"location":"shader-skybox/shader-properties-reference/","title":"Properties Reference","text":""},{"location":"shader-skybox/shader-properties-reference/#random-seed","title":"Random Seed","text":"<p>All of the effects of this skybox shader are generated from pseudorandom noise functions. These are seeded with an initial value, out of which each unique variation is generated. There are several properties for random seeds for different effects:</p> The 3D Random seed affects background stars, nebulas and the galaxy band. Notice how the glowing stars remain stationary, as they use a different seed. Also notice how 'scrolling' the 3D seed in any direction makes the effects 'flow'. These noise algorithms are continuous functions, and small changes to the 3D seed shift the pattern in the designated direction. <p>The galactic band and nebulas also have their own 3D seed variables, if you only want to alter those effects.</p> For nebulas, the property is named Nebula Offset, and there are 6 such properties, one for each side of the skybox cube. In the example Back Nebula Offset[-Z] is the nebula generated towards the -Z direction in 3D space. <p>Glowing stars have their own integer seed, as they are generated in a different manner:</p> Notice how the function here is not continuous, so every new seed generates a totaly different star placement."},{"location":"shader-skybox/shader-properties-reference/#global-properties","title":"Global Properties","text":"<ol> <li>Glowing Stars Seed: Random seed value for glowing stars distribution.</li> <li>3D Random Seed: Random seed value affecting background stars distribution, nebulas, and galactic disk shapes.</li> <li>Exposure: Affects the overall brightness of the shader.</li> </ol>"},{"location":"shader-skybox/shader-properties-reference/#sun","title":"Sun","text":"<ol> <li>Sun Enabled: Boolean keyword toggles the effect on or off, improving performance if the effect is not needed.</li> <li>Sun Color: Color of the sun glow. HDR color makes the emitted light bright and realistic.</li> <li>Sun Core Falloff: Controls the size of the sun sphere in the center.</li> <li>Sun Glow Falloff: Controls the size of the sun glow, the dimmer light surrounding the core. Should be less than the Sun Core Falloff for it to be visible.</li> <li>Sun Glow Intensity: Brightness of the Sun Glow Effect.</li> <li>Sun Shimmer Amount: Amount of light rays extending from the sun core.</li> <li>Sun Shimmer Intensity Falloff: Brightness of the light rays.</li> <li>Sun Shimmer Radial Falloff: How far the light rays extend out of the sun core.</li> </ol>"},{"location":"shader-skybox/shader-properties-reference/#background-starfield","title":"Background Starfield","text":"<ol> <li>Background Starfield Enabled: Boolean keyword toggles the effect on or off, improving performance if the effect is not needed.</li> <li>Starfield Density: Controls the size and density of stars.</li> <li>Stars Power: Increasing this value makes star dots larger and brighter.</li> <li>Starfield Darkness Mask: Noise pattern applied over the stars to create a more natural-looking star distribution with regions of darkness between stars. Can be toggled on or off.</li> <li>Starfield Darkness Mask Scale: Controls the scale of the darkness noise.</li> <li>Starfield Color Intensity: Makes star dots brighter and more saturated.</li> </ol>"},{"location":"shader-skybox/shader-properties-reference/#glowing-stars","title":"Glowing Stars","text":"<ol> <li>Glowing Stars Enabled: Boolean keyword toggles the effect on or off, improving performance if the effect is not needed.</li> <li>Glowing Stars Density: Controls the size and density of glowing stars.</li> <li>Glowing Stars Amount: Further controls star density without affecting size.</li> <li>Glowing Stars Power: Increasing this value makes glowing stars larger and brighter.</li> <li>Star Core Size: Controls the size of the glowing star core dot, separately from its spherical glow.</li> <li>Glowing Star Color Power: Makes glowing stars brighter and more saturated.</li> </ol>"},{"location":"shader-skybox/shader-properties-reference/#galactic-band","title":"Galactic Band","text":"<ol> <li>Galactic Band Enabled: Boolean keyword toggles the effect on or off, improving performance if the effect is not needed.</li> <li>Galaxy 3D Random Seed: Random seed value only affecting the galaxy\u2019s shape. This value and 3D Random Seed are added together to produce the final seed for the galaxy.</li> <li>Galaxy Rotation: Euler Rotation for galactic disk in radians.</li> <li>Galactic Outer Glow Blend: Controls how visible the outer glow part of the galactic band is.</li> <li>Galaxy Stars Blend: Controls how visible the galaxy stars are.</li> <li>Galaxy Great Rift Blend: Controls how visible the Great Rift is.</li> <li>Galaxy Outer Glow: The background light component of the galactic band.</li> <li>Galaxy Disk: The central region of the galactic band, filled with stars (star properties are controlled in a separate category).</li> <li>Galaxy Great Rift: A cloudy region of gas that obscures parts of the galactic disk.</li> <li>Width and Height: Control the shape of the effect (repeated for modules).</li> <li>Noise Scale: Controls the scale of the noise used for the shape of the effect (repeated for modules).</li> <li>Falloff: Controls how sharply the effect recedes into the background (repeated for modules).</li> <li>Color: Used for the offset in the cosine palette sampling described in the Customizing the Skybox section (repeated for modules).</li> <li>Color Range: Upper and lower bound of the area of the palette that is sampled to produce the final color. Not present in Great Rift.</li> <li>Galaxy Great Rift Darkness Factor: Controls how strongly the Great Rift hides the galactic stars behind it. Only affects stars inside the galactic disk.</li> <li>Galaxy Stars: The dense field of stars inside the galactic disk.</li> <li>Galaxy Stars Power: Increasing this value makes star dots larger and brighter.</li> <li>Galaxy Star Mask Falloff: Controls how sharply the stars recede into the background galaxy.</li> <li>Galaxy Stars Density: Controls the size and density of stars inside the Galactic Disk.</li> <li>Galaxy Stars Color Intensity: Makes star dots inside the galactic disk brighter and more saturated.</li> </ol>"},{"location":"shader-skybox/shader-properties-reference/#nebulas","title":"Nebulas","text":"<ol> <li>Nebulas Enabled: Boolean keyword toggles the effect on or off, improving performance if the effect is not needed.</li> <li>Nebula Blend: Controls visibility of all nebulas.</li> <li>Nebula Color: Color sampling offset as explained in the Customizing the Skybox section.</li> <li>Nebula Params (Parameters):<ul> <li>X: Scale: Noise scale property, best kept between 0 and 1 for domain warped noise.</li> <li>Y: Domain Warp: Strength of domain warping effect, 0 creates simple cloudy looking nebulas, 1 creates very warped \u2018islands\u2019 of nebulas.</li> <li>Z: Falloff: How sharply nebulas recede into the cosmic background. Increase to hide nebulas on a certain side.</li> <li>W: Color Gradient Upper Length: The upper bound of the color range sampling effect, increasing this value introduces more layers of color into nebulas.</li> </ul> </li> <li>Nebula Offset: Random seed value only affecting the nebula on that side\u2019s shape. This value and 3D Random Seed are added together to produce the final seed for the nebula.</li> </ol>"},{"location":"shader-skybox/static-cubemap-rendering/","title":"Improving Shader Skybox Performacnce","text":""},{"location":"shader-skybox/static-cubemap-rendering/#dynamic-skybox-shader-runtime-performance","title":"Dynamic Skybox Shader Runtime Performance","text":"<p>Using the skybox shader with all modules enabled can have a heavy impact on performance. The procedural noise functions using fractal sums (multiple layers of noise) that are used to generate natural looking nebulas and galactic band patterns are the most performance intensive. The nebulas sub-graph module uses a variant of this called Domain Warping which taxes the GPU the most out of all functions.</p> <p>While this is not a problem when adjusting the skybox in the Editor, at runtime it can make your game run very slowly.</p> <p>The following performance has been measured at runtime on an NVIDIA GTX 3060 GPU, constant across Playmode in the Editor and Windows Builds:</p> <ul> <li> <p>82 FPS average at 1080p</p> </li> <li> <p>25 FPS average at 2160p</p> </li> </ul> <p>There are two methods to greatly improve performance: Using the Render Cubemap Wizard to bake a dynamic skybox into a static cubemap texture, or using the VFX Graph Skybox for nebula rendering.</p>"},{"location":"shader-skybox/static-cubemap-rendering/#render-cubemap-wizard","title":"Render Cubemap Wizard","text":"<p>For the best performance, once a skybox has been generated, it can be captured and rendered into a static cubemap using an editor utility included with this package - this completely frees up the GPU, barely has any impact on performance, as we're just sampling a texture. </p> <p>The downside to this is that a high quality skybox cubemap texture can take up a lot of disk space ~ 400 MB for a 6-sided skybox texture where each face of the skybox is 4096x4096 resolution. You can think of this process as transferring the load from your GPU to your drive.</p> <p></p> <p>When you click the <code>Render</code> button, whatever skybox is currently in the scene will be captured and baked into a single high-quality 4K PNG texture. </p> <p>You should note that whatever 3D objects are in the scene will also get captured, as the cubemap baking process basically instantiates a temporary camera at the scene center, and uses it to capture a 360 view of the entire skybox. If you don't want this to happen, disable any scene objects before rendering the skybox.</p> <p>If your skybox has the Procedural Sun module enabled, it will get statically captured in the cubemap texture, which might not be what you want. The Sun effect itself is not performance heavy, so the static skybox shader that is shipped with this package also includes this effect, in case you want to have a procedural sun moving with main light direction.</p> <p>Once you have rendered your cubemap texture, you can use it in your scene by creating a new material with the <code>Parallel Cascades/Cubemap Skybox with Procedural Sun</code> shader, or using the sample material with the same name in the <code>ProceduralSpaceSkybox/Samples/Materials</code> folder and assigning it a new texture.</p>"},{"location":"shader-skybox/troubleshooting/","title":"Troubleshooting","text":""},{"location":"shader-skybox/troubleshooting/#sun-shimmer-moving-with-camera","title":"Sun Shimmer moving with camera","text":"<p>This might happen if your game camera is moving very large distances, due to the way the shimmer effect is calculated requiring a fixed value for the distance to the sun object (note that the default distance is 10^7 so this shouldn't occur under regular circumstances).</p> <p></p> <p>To fix this, you can increase the Sun Distance property in the Procedural Sun module.</p> <p></p>"},{"location":"vfx-graph-skybox/customization/","title":"VFX Graph Skybox Customization","text":"<p>You can generate new variants of the same effect, randomising star and nebula placements, colors and sizes by Reseeding the component. The asset comes with a set of 15 pre-generated nebula textures, randomly picked from for every iteration. You can choose your own textures for stars, as well as their colors and sizes. You can also create your own nebula textures with the Procedural Nebula Texture Generator and Texture Array Baker editor tools.</p>"},{"location":"vfx-graph-skybox/procedural-nebula-texture-generator/","title":"Procedural Nebula Texture Generator","text":"<p>You can find this custom Editor Window under Tools/Parallel Cascades/Procedural Nebula Texture Generator. You can use it to preview and generate procedural nebulas, which you can then use in the VFX Skybox: </p> <p></p> <p>You can modify the material properties from this window, and any changes will be immediately reflected in the preview image. Scrolling through the random seed in the manner explained in the Skybox Shader Property Reference allows you to generate new nebula shapes.</p> <p>Once you are happy with the result click <code>Bake</code> and save the texture in your project.</p>"},{"location":"vfx-graph-skybox/procedural-nebula-texture-generator/#texture-array-baker","title":"Texture Array Baker","text":"<p>The skybox visual effect expects all nebula textures it uses to be packed into a TextureArray, which needs to be done through another editor tool:</p> This window is found under <code>Tools/Parallel Cascades/Texture Array Baker</code> <p>You can assign the texture you want to bake through the inspector interface or multiple select and drag and drop them directly onto the <code>Textures</code> field.</p> <p>You need to be wary of texture sizes when baking large texture arrays here, as the 15 texture nebula array in the Samples of this asset is 480 MB in size.</p>"},{"location":"vfx-graph-skybox/setup/","title":"VFX Graph Skybox","text":"<p>The VFX Graph Skybox is not a traditional skybox - it is a visual effect that uses some tricks to appear as if it is a static skybox, drawn behind all other objects.</p>"},{"location":"vfx-graph-skybox/setup/#applying-the-skybox","title":"Applying the skybox","text":"<p>To add the skybox to your scene, drag the VFX Skybox prefab from ProceduralSpaceSkybox/Core/VFX into your scene, and make it a child of your main camera. This ensures the effect moves with the camera and always appears infinitely far away.</p> <p></p> <p>The <code>Disable Rotation</code> script handles keeping the orientation of the skybox static regardless of the actual camera rotation, so that you can look around the skybox.</p> <p>Once dropped in the scene, the visual effect will automatically load, and will be displayed in the game and scene views.</p> <p></p> <p>The default skybox material is still being drawn behind this. In order to disable this in the game view, you should find your main camera\u2019s Camera component, and under the Environment Tab, set Background Type to Solid Color and choose whatever color you want for your skybox background:</p> <p></p> <p>This will be reflected in your Game View (but not in the Scene View!):</p> <p></p>"},{"location":"vfx-graph-skybox/setup/#combining-the-vfx-skybox-with-a-procedural-shader-skybox","title":"Combining the VFX Skybox with a Procedural Shader Skybox","text":"<p>A solid black background is functional for the VFX Skybox, but an improved effect can be achieved by adding the procedural skybox shader as a background. You can toggle the modules you don't want off - so you could have the procedural Sun and Galactic band, whilst leaving the stars and nebulas to the more performant VFX Skybox.</p>"}]}